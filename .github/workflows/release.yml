name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      run-test: false

  release:
    name: Release on GitHub
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -lR
        working-directory: artifacts

      - name: Prepare release artifacts
        run: |
          mkdir -p target
          mv artifacts/tree-sitter.wasm/* target/
          rm -r artifacts/tree-sitter.wasm
          for platform in $(cd artifacts; ls | sed 's/^tree-sitter\.//'); do
            exe=$(ls artifacts/tree-sitter.$platform/tree-sitter*)
            gzip --stdout --name $exe > target/tree-sitter-$platform.gz
          done
          rm -rf artifacts
          ls -l target/

      - name: Create release
        run: |-
          gh release create \
            target/tree-sitter-*.gz \
            target/tree-sitter.wasm \
            target/tree-sitter.js
        env:
          GH_TOKEN: ${{ github.token }}

  crates_io:
    name: Publish packages to Crates.io
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Publish crates to Crates.io
        uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  npm:
    name: Publish packages to npmjs.com
    runs-on: ubuntu-latest
    needs: release
    strategy:
      fail-fast: false
      matrix:
        directory: [cli/npm, lib/binding_web]
    steps:
      - name: CHeckout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build wasm
        if: matrix.directory == 'lib/binding_web'
        run: cargo xtask build-wasm

      - name: Publish to npmjs.com
        working-directory: ${{ matrix.directory }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
